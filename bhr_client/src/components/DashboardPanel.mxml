<?xml version="1.0" encoding="utf-8"?>
<s:Panel xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 creationComplete="panel1_creationCompleteHandler(event)">
	
	<fx:Script>
		<![CDATA[
			import flash.events.Event;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CalendarLayoutChangeEvent;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.remoting.mxml.RemoteObject;
			
			import valueObjects.Employee;				
			
			public var dataService:RemoteObject;
			
			[Bindable]
			private var locations:ArrayCollection;
			[Bindable]
			private var employees:ArrayCollection;
			[Bindable]
			private var worksheets:ArrayCollection;

			protected function panel1_creationCompleteHandler(event:FlexEvent):void
			{
				dataService.getWorksheetForClinicAndDateRange.addEventListener(ResultEvent.RESULT, dataService_getWorksheet_resultHandler);
				dataService.getWorksheetForEmployeeAndDateRange.addEventListener(ResultEvent.RESULT, dataService_getWorksheet_resultHandler);
				dataService.getWorksheetForClinicAndEmployeeAndDateRange.addEventListener(ResultEvent.RESULT, dataService_getWorksheet_resultHandler);
				
				dataService.getWorksheetForClinicAndDateRange.addEventListener(FaultEvent.FAULT, dataService_getWorksheet_faultHandler);
				dataService.getWorksheetForEmployeeAndDateRange.addEventListener(FaultEvent.FAULT, dataService_getWorksheet_faultHandler);
				dataService.getWorksheetForClinicAndEmployeeAndDateRange.addEventListener(FaultEvent.FAULT, dataService_getWorksheet_faultHandler);
				
				dataService.getLocation.addEventListener(ResultEvent.RESULT, dataService_getLocation_resultHandler);
				dataService.getAllEmployees.addEventListener(ResultEvent.RESULT, dataService_getAllEmployee_resultHandler);
				
				dataService.getLocation();
				dataService.getAllEmployees();
			}
			
			protected function dataService_getLocation_resultHandler(event:ResultEvent):void
			{
				locations = event.result as ArrayCollection;	
			}
			
			protected function dataService_getAllEmployee_resultHandler(event:ResultEvent):void
			{
				employees = event.result as ArrayCollection;
			}			
			
			protected function dataService_getWorksheet_resultHandler(event:ResultEvent):void				
			{	
				worksheets = event.result as ArrayCollection; 
				runReportB.enabled = true;
			}
			
			protected function dataService_getWorksheet_faultHandler(event:FaultEvent):void
			{
				Alert.show(event.fault.faultString, "Error Message");
				runReportB.enabled = true;
			}			
						
			protected function runReportB_clickHandler(event:MouseEvent):void
			{
				if (locationCB.selectedIndex == -1 && employeeCB.selectedIndex == -1){
					Alert.show("Please select a location or employee to run the report!");
					locationCB.setFocus();
				}else{
					var emp:Employee = null;
					var loc:String = null;
					emp = employeeCB.selectedItem;
					loc = locationCB.selectedItem;
					if (emp != null && loc != null){
						dataService.getWorksheetForClinicAndEmployeeAndDateRange(loc, emp.empId, startDateDF.selectedDate, endDateDF.selectedDate);
						this.title = "Report for "+emp.fullName+" at "+loc+" from "+dateFormatter.format(startDateDF.selectedDate)+" to "+dateFormatter.format(endDateDF.selectedDate);
					}else if (emp == null){
						dataService.getWorksheetForClinicAndDateRange(loc, startDateDF.selectedDate, endDateDF.selectedDate);
						this.title = "Report for "+loc+" from "+dateFormatter.format(startDateDF.selectedDate)+" to "+dateFormatter.format(endDateDF.selectedDate);						
					}else{
						dataService.getWorksheetForEmployeeAndDateRange(emp.empId, startDateDF.selectedDate, endDateDF.selectedDate);
						this.title = "Report for "+emp.fullName+" from "+dateFormatter.format(startDateDF.selectedDate)+" to "+dateFormatter.format(endDateDF.selectedDate);						
					}
					runReportB.enabled = false;
				}
			}

			private function categoryAxis_labelFunc(item:Object, prevValue:Object, axis:CategoryAxis, categoryItem:Object):String {
				var tempDate:Date = item as Date;
				return dateFormatter.format(tempDate).toUpperCase();
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<mx:DateFormatter id="dateFormatter" formatString="MM/DD" />
	</fx:Declarations>
		
	<mx:VBox paddingLeft="10" paddingTop="10" paddingRight="10" paddingBottom="10" width="100%" height="100%">
		
		<mx:HBox paddingBottom="10">
			<s:Label text="Location:" paddingTop="6"/>
			<s:ComboBox id="locationCB" dataProvider="{locations}"/>
			<s:ComboBox id="employeeCB" dataProvider="{employees}" labelField="fullName"/>
			<s:Label text="From:" paddingLeft="30" paddingTop="6"/>
			<mx:DateField id="startDateDF" selectedDate="{new Date()}"/>
			<s:Label text="To:" paddingLeft="30" paddingTop="6"/>
			<mx:DateField id="endDateDF" selectedDate="{new Date()}"/>
			<s:Button id="runReportB" label="Run" click="runReportB_clickHandler(event)"/>
		</mx:HBox>
		
		<mx:Tile width="100%" height="100%" >
			<s:Panel title="Reported Hours" width="100%" height="100%">
				<s:layout>
					<s:HorizontalLayout paddingLeft="10" paddingTop="10" paddingRight="10" paddingBottom="10"/>
				</s:layout>
				<mx:ColumnChart id="hoursCC" x="10" y="10" dataProvider="{worksheets}" showDataTips="true" width="100%" height="100%">
					<mx:horizontalAxis>
						<mx:CategoryAxis title="Date" categoryField="date" labelFunction="categoryAxis_labelFunc"/>
					</mx:horizontalAxis>
					<mx:verticalAxis>
						<mx:LinearAxis title="Hours"/>						
					</mx:verticalAxis>
					<mx:series>
						<mx:ColumnSeries displayName="Total Hours (face)" yField="totalFaceHours"/>
						<mx:ColumnSeries displayName="Total Hours (other)" yField="totalOtherHours"/>
					</mx:series>				
				</mx:ColumnChart>		
				<mx:Legend dataProvider="{hoursCC}"/>
			</s:Panel>			
			<s:Panel title="Productivity" width="100%" height="100%">
				<s:layout>
					<s:HorizontalLayout paddingLeft="10" paddingTop="10" paddingRight="10" paddingBottom="10"/>
				</s:layout>
				<mx:LineChart id="prodCC" x="10" y="10" dataProvider="{worksheets}" showDataTips="true" width="100%" height="100%">
					<mx:horizontalAxis>
						<mx:CategoryAxis title="Date" categoryField="date" labelFunction="categoryAxis_labelFunc"/>
					</mx:horizontalAxis>
					<mx:verticalAxis>
						<mx:LinearAxis title="%" minimum="0" maximum="100"/>						
					</mx:verticalAxis>
					<mx:series>
						<mx:LineSeries displayName="Productivity" yField="productivity"/>
					</mx:series>				
				</mx:LineChart>		
				<mx:Legend dataProvider="{prodCC}"/>
			</s:Panel>			
			<s:Panel title="Daily Activity" width="100%" height="100%">
				<s:layout>
					<s:HorizontalLayout paddingLeft="10" paddingTop="10" paddingRight="10" paddingBottom="10"/>
				</s:layout>
				<mx:ColumnChart id="workDoneCC" x="10" y="10" dataProvider="{worksheets}" showDataTips="true" width="100%" height="100%">
					<mx:horizontalAxis>
						<mx:CategoryAxis title="Date" categoryField="date" labelFunction="categoryAxis_labelFunc"/>
					</mx:horizontalAxis>
					<mx:verticalAxis>
						<mx:LinearAxis title="Count"/>						
					</mx:verticalAxis>
					<mx:series>
						<mx:ColumnSeries displayName="Total Seen" yField="totalSeen"/>
						<mx:ColumnSeries displayName="Total Scheduled" yField="numScheduled"/>
						<mx:ColumnSeries displayName="Total No-Shows" yField="numNoShow"/>
						<mx:ColumnSeries displayName="Total Cancelation" yField="numCancel"/>
						<mx:ColumnSeries displayName="Total New" yField="numNew"/>
						<mx:ColumnSeries displayName="Total Drop-Ins" yField="numDropin"/>
					</mx:series>				
				</mx:ColumnChart>		
				<mx:Legend dataProvider="{workDoneCC}"/>
			</s:Panel>			
			<s:Panel title="Income and Expense" width="100%" height="100%">
				<s:layout>
					<s:HorizontalLayout paddingLeft="10" paddingTop="10" paddingRight="10" paddingBottom="10"/>
				</s:layout>
				<mx:ColumnChart id="incomeCC" x="10" y="10" dataProvider="{worksheets}" showDataTips="true" width="100%" height="100%">
					<mx:horizontalAxis>
						<mx:CategoryAxis title="Date" categoryField="date" labelFunction="categoryAxis_labelFunc"/>
					</mx:horizontalAxis>
					<mx:verticalAxis>
						<mx:LinearAxis title="$"/>						
					</mx:verticalAxis>
					<mx:series>
						<mx:ColumnSeries displayName="Total Revenue" yField="totalRevenue"/>
						<mx:ColumnSeries displayName="Daily Salary" yField="dailySalary"/>
						<mx:ColumnSeries displayName="Balance" yField="balance"/>
					</mx:series>				
				</mx:ColumnChart>		
				<mx:Legend dataProvider="{incomeCC}"/>
			</s:Panel>						
		</mx:Tile>	
		
	</mx:VBox>
	
	
</s:Panel>

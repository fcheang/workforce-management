<?xml version="1.0" encoding="utf-8"?>
<s:BorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				   xmlns:s="library://ns.adobe.com/flex/spark" 
				   xmlns:mx="library://ns.adobe.com/flex/mx"
				   creationComplete="panel1_creationCompleteHandler(event)"
				   dropShadowVisible="true" borderWeight="1" backgroundColor="white">
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.*;
			import mx.events.CalendarLayoutChangeEvent;
			import mx.rpc.events.*;
			import mx.rpc.remoting.*;			
			import spark.events.TextOperationEvent;			
			import valueObjects.*;
						
			public var dataService:RemoteObject;
			public var user:User;
			
			[Bindable]
			private var contribution:Contribution;
			[Bindable]
			private var contributionItems:ArrayCollection;
			
			protected function panel1_creationCompleteHandler(event:FlexEvent):void
			{				
				dataService.getContribution.addEventListener(ResultEvent.RESULT, dataService_getContribution_resultHandler);
				dataService.getContributionItems.addEventListener(ResultEvent.RESULT, dataService_getContributionItems_resultHandler);
				dataService.updateContributionReport.addEventListener(ResultEvent.RESULT, dataService_updateContributionReport_resultHandler);
				
				nameL.text = "Staff Name: "+user.getDisplayName(); 
				
				dataService.getContribution(dateDF.selectedDate, user);
				dataService.getContributionItems(dateDF.selectedDate, user);	
			}
			
			protected function dataService_getContribution_resultHandler(event:ResultEvent):void
			{
				contribution = event.result as Contribution;
			}			

			protected function dataService_getContributionItems_resultHandler(event:ResultEvent):void
			{
				contributionItems = event.result as ArrayCollection;
			}			
			
			protected function dataService_updateContributionReport_resultHandler(event:ResultEvent):void
			{
				var updated:Boolean = event.result as Boolean;
				if (updated){
					Alert.show("Contribution report was submitted successfully!");
				}else{
					Alert.show("Problem submitting Contribution Report!");
					dataService.getContribution(dateDF.selectedDate, user);
					dataService.getContributionItems(dateDF.selectedDate, user);
				}
			}			
			
			protected function dateDF_changeHandler(event:CalendarLayoutChangeEvent):void
			{
				if (dateDF.selectedDate != null){
					dataService.getContribution(dateDF.selectedDate, user);
					dataService.getContributionItems(dateDF.selectedDate, user);
				}
			}			
			
			protected function submitB_clickHandler(event:MouseEvent):void
			{
				submitB.enabled = false;
				dataService.updateContributionReport(contribution, contributionItems);
			}
			
			protected function calcTotal(item:Object,  column:DataGridColumn):String
			{
				var contItem:ContributionItem = item as ContributionItem;
				return contItem.calcTotal().toString();
			}
			
			protected function enableSubmitBtn():void
			{
				submitB.enabled = true;
			}			

		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<mx:VBox 
		width="100%" 
		height="100%" 
		paddingLeft="10" paddingTop="10" paddingRight="10" paddingBottom="10">

		<mx:HBox paddingLeft="10" paddingTop="10" paddingRight="10" paddingBottom="10" width="100%">
			<s:Label text="Date:" paddingLeft="30" paddingTop="6"/>
			<mx:DateField id="dateDF" selectedDate="{new Date()}" change="dateDF_changeHandler(event)"/>
			<s:Label id="nameL" paddingLeft="30" paddingTop="6"/>
		</mx:HBox>
		
		<mx:DataGrid  
			lockedColumnCount="1" 
			horizontalScrollPolicy="auto" 
			verticalScrollPolicy="auto" 
			resizableColumns="true" width="100%" height="100%" paddingLeft="10" paddingTop="10" paddingRight="10" paddingBottom="10" id="contributionReportDG"
			dataProvider="{contributionItems}" editable="true" variableRowHeight="true" wordWrap="true" itemEditEnd="enableSubmitBtn()">
			<mx:columns>
				<mx:DataGridColumn headerText="Type" dataField="type" editable="false"/>
				<mx:DataGridColumn headerText="Private Pay" dataField="privatePay"/>
				<mx:DataGridColumn headerText="HMO" dataField="hmo"/>
				<mx:DataGridColumn headerText="Alameda County" dataField="ac"/>
				<mx:DataGridColumn headerText="Alameda County Child (any type)" dataField="acChild"/>
				<mx:DataGridColumn headerText="Contra Costa County" dataField="ccc"/>
				<mx:DataGridColumn headerText="Contra Costa County Child (any type)" dataField="cccChild"/>
				<mx:DataGridColumn headerText="San Francisco and Sacramento Counties" dataField="sf"/>
				<mx:DataGridColumn headerText="Other" dataField="other"/>
				<mx:DataGridColumn headerText="TOTAL" labelFunction="calcTotal" editable="false"/>
			</mx:columns>
		</mx:DataGrid>
		
		<mx:Form width="100%">
			<mx:FormHeading label="Other Activities:"/>
			<mx:FormItem label="Hours worked:">
				<s:TextInput id="hrsWorkedTI" width="500" text="@{contribution.hrsWorkedStr}" change="enableSubmitBtn()"/>
			</mx:FormItem>
			<mx:FormItem label="Auths entered today:">
				<s:TextInput id="authsEnteredTI" width="500" text="@{contribution.authsEntered}" change="enableSubmitBtn()"/>
			</mx:FormItem>
			<mx:FormItem label=" Interpreters Scheduled/Ordered:">
				<s:TextInput id="interpretersOrderedTI" width="500" text="@{contribution.interpretersOrdered}" change="enableSubmitBtn()"/>
			</mx:FormItem>
			<mx:FormItem label="Collateral collected:">
				<s:TextInput id="collRcvTI" width="500" text="@{contribution.collateralReceived}" change="enableSubmitBtn()"/>
			</mx:FormItem>
			<mx:FormItem label="Other:">
				<s:TextInput id="otherTI" width="500" text="@{contribution.other}" change="enableSubmitBtn()"/>
			</mx:FormItem>
		</mx:Form>
		
		<s:Button label="Submit" id="submitB" click="submitB_clickHandler(event)" enabled="false"/>
				
	</mx:VBox>
	
</s:BorderContainer>

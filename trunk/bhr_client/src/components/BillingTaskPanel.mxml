<?xml version="1.0" encoding="utf-8"?>
<s:BorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				   xmlns:s="library://ns.adobe.com/flex/spark" 
				   xmlns:mx="library://ns.adobe.com/flex/mx"
				   creationComplete="panel1_creationCompleteHandler(event)"
				   dropShadowVisible="true" borderWeight="1" backgroundColor="white">
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.*;
			import mx.events.CalendarLayoutChangeEvent;
			import mx.rpc.events.*;
			import mx.rpc.remoting.*;
			
			import spark.events.TextOperationEvent;
			
			import valueObjects.*;
			
			public var dataService:RemoteObject;
			public var user:User;
			
			[Bindable]
			private var tasks:ArrayCollection = new ArrayCollection();
			
			protected function panel1_creationCompleteHandler(event:FlexEvent):void
			{				
				dataService.getBillingTaskForWeek.addEventListener(ResultEvent.RESULT, dataService_getBillingTaskForWeek_resultHandler);
				dataService.updateBillingTask.addEventListener(ResultEvent.RESULT, dataService_updateBillingTask_resultHandler);
				
				nameL.text = "Biller's Name: "+user.getDisplayName(); 
				
				dataService.getBillingTaskForWeek(dateDF.selectedDate, user);	
			}
			
			protected function dataService_getBillingTaskForWeek_resultHandler(event:ResultEvent):void
			{
				tasks.removeAll();
				var objects:ArrayCollection = event.result as ArrayCollection;
				for each (var obj:Object in objects)
				{
					var task:BillingTask= new BillingTask();
					task.userId = obj.userId;
					task.date = obj.date;
					task.dateStr = obj.dateStr;					
					task.claimsDroppedC = obj.claimsDroppedC;
					task.claimsDroppedP = obj.claimsDroppedP;
					task.errors = obj.errors;
					task.denials = obj.denials;
					task.followUps = obj.followUps;					
					task.appeals = obj.appeals;
					task.hmoAmt = obj.hmoAmt;
					task.acAmt = obj.acAmt;
					task.cccAmt = obj.cccAmt;					
					task.privateAmt = obj.privateAmt;
					task.otherAmt = obj.otherAmt;
					task.otherTask1 = obj.otherTask1;
					task.otherTask2 = obj.otherTask2;
					task.otherTask3 = obj.otherTask3;
					tasks.addItem(task);
				}
			}			
			
			protected function dataService_updateBillingTask_resultHandler(event:ResultEvent):void
			{
				var updated:Boolean = event.result as Boolean;
				if (updated){
					Alert.show("Tasks was submitted successfully!");
				}else{
					Alert.show("Problem submitting Tasks!");
					dataService.getBillingTaskForWeek(dateDF.selectedDate, user);
				}
			}			
			
			protected function dateDF_changeHandler(event:CalendarLayoutChangeEvent):void
			{
				if (dateDF.selectedDate != null){
					dataService.getBillingTaskForWeek(dateDF.selectedDate, user);
				}
			}			
			
			protected function submitB_clickHandler(event:MouseEvent):void
			{
				submitB.enabled = false;
				dataService.updateBillingTask(tasks);
			}
			
			protected function enableSubmitBtn():void
			{
				submitB.enabled = true;
			}			
						
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<mx:VBox 
		width="100%" 
		height="100%" 
		paddingLeft="10" paddingTop="10" paddingRight="10" paddingBottom="10">
		
		<mx:HBox paddingLeft="10" paddingTop="10" paddingRight="10" paddingBottom="10" width="100%">
			<s:Label text="Date:" paddingLeft="30" paddingTop="6"/>
			<mx:DateField id="dateDF" selectedDate="{new Date()}" change="dateDF_changeHandler(event)"/>
			<s:Label id="nameL" paddingLeft="30" paddingTop="6"/>
		</mx:HBox>
		
		<mx:DataGrid  
			lockedColumnCount="1" 
			horizontalScrollPolicy="auto" 
			verticalScrollPolicy="auto" 
			resizableColumns="true" width="100%" height="100%" paddingLeft="10" paddingTop="10" paddingRight="10" paddingBottom="10" id="billingTaskDG"
			dataProvider="{tasks}" editable="true" variableRowHeight="true" wordWrap="true" itemEditEnd="enableSubmitBtn()" sortableColumns="false">
			<mx:columns>
				<mx:DataGridColumn headerText="Date" dataField="dateStr" editable="false"/>
				<mx:DataGridColumn headerText="# of claims dropped (Completed)" dataField="claimsDroppedC"/>
				<mx:DataGridColumn headerText="# of claims dropped (Still Pending)" dataField="claimsDroppedP"/>
				<mx:DataGridColumn headerText="# of errors" dataField="errors"/>
				<mx:DataGridColumn headerText="# of denials" dataField="denials"/>
				<mx:DataGridColumn headerText="# of follow-ups" dataField="followUps"/>
				<mx:DataGridColumn headerText="# of appeals" dataField="appeals"/>
				<mx:DataGridColumn headerText="HMO (list amounts past 30+ days)" dataField="hmoAmt"/>
				<mx:DataGridColumn headerText="AC (list amounts past 30+ days)" dataField="acAmt"/>
				<mx:DataGridColumn headerText="CCC (list amounts past 30+ days)" dataField="cccAmt"/>
				<mx:DataGridColumn headerText="Private (list amounts past 30+ days)" dataField="privateAmt"/>
				<mx:DataGridColumn headerText="Other (list amounts past 30+ days)" dataField="otherAmt"/>
				<mx:DataGridColumn headerText="Other Billing Task 1" dataField="otherTask1"/>
				<mx:DataGridColumn headerText="Other Billing Task 2" dataField="otherTask2"/>
				<mx:DataGridColumn headerText="Other Billing Task 3" dataField="otherTask3"/>				
			</mx:columns>
		</mx:DataGrid>
		
		<s:Button label="Submit" id="submitB" click="submitB_clickHandler(event)" enabled="false"/>
		
	</mx:VBox>
	
</s:BorderContainer>
